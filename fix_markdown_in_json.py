#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç markdown —Ä–∞–∑–º–µ—Ç–∫—É –≤ JSON structured data
"""

import os
import re
import glob

def fix_markdown_in_json():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç markdown —Ä–∞–∑–º–µ—Ç–∫—É –≤ JSON structured data"""
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ .md —Ñ–∞–π–ª—ã
    md_files = []
    md_files.extend(glob.glob("content/**/*.md", recursive=True))
    
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(md_files)} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
    
    fixed_files = 0
    
    for file_path in md_files:
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            original_content = content
            file_modified = False
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–≤–µ–∑–¥–æ—á–∫–∏ –≤ JSON description
            pattern1 = r'("description":\s*)"\*([^*]+)\*"'
            if re.search(pattern1, content):
                content = re.sub(pattern1, r'\1"\2"', content)
                file_modified = True
                print(f"  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω description –≤ JSON: {file_path}")
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–≤–µ–∑–¥–æ—á–∫–∏ –≤ og:description
            pattern2 = r'(<meta property="og:description" content=")\*([^*]+)\*(" />)'
            if re.search(pattern2, content):
                content = re.sub(pattern2, r'\1\2\3', content)
                file_modified = True
                print(f"  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω og:description: {file_path}")
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–≤–µ–∑–¥–æ—á–∫–∏ –≤ twitter:description
            pattern3 = r'(<meta name="twitter:description" content=")\*([^*]+)\*(" />)'
            if re.search(pattern3, content):
                content = re.sub(pattern3, r'\1\2\3', content)
                file_modified = True
                print(f"  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω twitter:description: {file_path}")
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–≤–µ–∑–¥–æ—á–∫–∏ –≤ markdown –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö (–Ω–æ –Ω–µ –≤ JSON)
            # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å *–û–±–Ω–æ–≤–ª–µ–Ω–æ: –∏ –Ω–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ JSON –±–ª–æ–∫–æ–≤
            pattern4 = r'^(\s*)\*–û–±–Ω–æ–≤–ª–µ–Ω–æ:([^*]+)\*(\s*)$'
            if re.search(pattern4, content, re.MULTILINE):
                content = re.sub(pattern4, r'\1–û–±–Ω–æ–≤–ª–µ–Ω–æ:\2\3', content, flags=re.MULTILINE)
                file_modified = True
                print(f"  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω markdown –∑–∞–≥–æ–ª–æ–≤–æ–∫: {file_path}")
            
            if file_modified:
                with open(file_path, 'w', encoding='utf-8') as f:
                    f.write(content)
                fixed_files += 1
                
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {file_path}: {e}")
    
    print(f"\nüìä –ò–¢–û–ì–ò:")
    print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {fixed_files}")
    print(f"üìÅ –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: {len(md_files)}")
    
    return fixed_files

if __name__ == "__main__":
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï MARKDOWN –í JSON STRUCTURED DATA")
    print("=" * 60)
    
    fixed = fix_markdown_in_json()
    
    if fixed > 0:
        print(f"\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixed} —Ñ–∞–π–ª–æ–≤!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∫–æ–º–º–∏—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–π —Ç–µ–≥.")
    else:
        print("\n‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!")
    
    print("=" * 60) 