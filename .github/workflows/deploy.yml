name: Deploy to Production

on:
  push:
    tags:
      - 'v*' # –î–µ–ø–ª–æ–π —Ç–æ–ª—å–∫–æ –ø–æ —Ç–µ–≥—É

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy via sshpass
        env:
          SSHPASS: ${{ secrets.SSH_PASS }}
        run: |
          sshpass -p "$SSHPASS" ssh -o StrictHostKeyChecking=no root@${{ secrets.SSH_HOST }} '
            cd /root/project/Landing/AI-bots && \
            git fetch --all --tags && \
            git checkout ${{ github.ref_name }} && \
            echo "üìã –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ aibotsnews.service..." && \
            systemctl stop aibotsnews.service || true && \
            echo "‚è≥ –ñ–¥–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫–∏..." && \
            sleep 5 && \
            echo "üßπ –û—á–∏—â–∞–µ–º –∫—ç—à —Ç–æ–ª—å–∫–æ –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞..." && \
            rm -rf .next/ node_modules/ || true && \
            echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." && \
            npm ci --production && \
            echo "üî® –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç..." && \
            npm run build && \
            echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ aibotsnews.service..." && \
            systemctl start aibotsnews.service && \
            echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞..." && \
            sleep 10 && \
            systemctl status aibotsnews.service
          '

      - name: Notify Telegram (success)
        if: success()
        run: |
          echo "üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–µ–ø–ª–æ–µ..."
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.ADMIN_IDS }} \
            -d text="‚úÖ –î–µ–ø–ª–æ–π –ø–æ —Ç–µ–≥—É ${{ github.ref_name }} –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ!")
          
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          RESPONSE_BODY=$(echo "$RESPONSE" | head -n -1)
          
          echo "HTTP Code: $HTTP_CODE"
          echo "Response: $RESPONSE_BODY"
          
          if [ "$HTTP_CODE" != "200" ]; then
            echo "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $HTTP_CODE"
            exit 1
          else
            echo "‚úÖ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
          fi

      - name: Notify Telegram (failure)
        if: failure()
        run: |
          echo "üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –¥–µ–ø–ª–æ—è..."
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.ADMIN_IDS }} \
            -d text="‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è –ø–æ —Ç–µ–≥—É ${{ github.ref_name }}. –ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏ GitHub Actions!")
          
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          RESPONSE_BODY=$(echo "$RESPONSE" | head -n -1)
          
          echo "HTTP Code: $HTTP_CODE"
          echo "Response: $RESPONSE_BODY"
          
          if [ "$HTTP_CODE" != "200" ]; then
            echo "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: $HTTP_CODE"
            echo "–≠—Ç–æ –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å TELEGRAM_TOKEN –∏–ª–∏ ADMIN_IDS"
          else
            echo "‚úÖ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 