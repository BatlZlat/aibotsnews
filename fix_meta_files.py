#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è .meta-—Ñ–∞–π–ª–æ–≤
–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ meta-—Ñ–∞–π–ª—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è structured data
"""

import os
import json
import re
from datetime import datetime
from pathlib import Path

def extract_name_from_slug(slug):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑ slug —Ñ–∞–π–ª–∞"""
    # –£–±–∏—Ä–∞–µ–º —Å—É—Ñ—Ñ–∏–∫—Å—ã –∏ –∑–∞–º–µ–Ω—è–µ–º –¥–µ—Ñ–∏—Å—ã –Ω–∞ –ø—Ä–æ–±–µ–ª—ã
    name = slug.replace('-seo', '').replace('-2025', '')
    
    # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    prefixes = ['how-to-use-', 'review-', 'comparison-', 'top-', 'ai-']
    for prefix in prefixes:
        if name.startswith(prefix):
            name = name[len(prefix):]
    
    # –ó–∞–º–µ–Ω—è–µ–º –¥–µ—Ñ–∏—Å—ã –Ω–∞ –ø—Ä–æ–±–µ–ª—ã –∏ –¥–µ–ª–∞–µ–º –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã
    name = name.replace('-', ' ').replace('_', ' ')
    
    # –î–µ–ª–∞–µ–º –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∑–∞–≥–ª–∞–≤–Ω–æ–π
    name = name.title()
    
    return name

def generate_meta_content(slug, category):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ meta-—Ñ–∞–π–ª–∞"""
    name = extract_name_from_slug(slug)
    today = datetime.now().strftime("%Y-%m-%dT%H:%M:%SZ")
    
    # –†–∞–∑–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    descriptions = {
        'reviews': f"–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–∑—ã–≤ –æ {name} –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç, –∫–µ–π—Å—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –ø–ª—é—Å—ã –∏ –º–∏–Ω—É—Å—ã.",
        'guides': f"–ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é {name} –≤ 2025 –≥–æ–¥—É. –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, —Å–æ–≤–µ—Ç—ã —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã.",
        'news': f"–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ {name} –≤ 2025 –≥–æ–¥—É. –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, —Ç—Ä–µ–Ω–¥—ã –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏ –≤ –º–∏—Ä–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.",
        'comparisons': f"–î–µ—Ç–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ {name} —Å –∞–Ω–∞–ª–æ–≥–∞–º–∏. –ê–Ω–∞–ª–∏–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π, —Ü–µ–Ω—ã, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.",
        'ratings': f"–†–µ–π—Ç–∏–Ω–≥ –ª—É—á—à–∏—Ö {name} –≤ 2025 –≥–æ–¥—É. –û–±—ä–µ–∫—Ç–∏–≤–Ω–∞—è –æ—Ü–µ–Ω–∫–∞, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏ –≤—ã–±–æ—Ä —ç–∫—Å–ø–µ—Ä—Ç–æ–≤.",
        'main': f"–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {name}. –í—Å–µ —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö."
    }
    
    description = descriptions.get(category, f"–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {name}. –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.")
    
    return {
        "description": description,
        "ogImage": f"https://aibotsnews.ru/images/{slug}.jpg",
        "datePublished": today,
        "dateModified": today,
        "keywords": f"{name}, AI, –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, 2025"
    }

def is_valid_meta(data):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ meta-—Ñ–∞–π–ª –≤–∞–ª–∏–¥–Ω—ã–º"""
    required_fields = ['description', 'ogImage', 'datePublished', 'dateModified', 'keywords']
    return all(field in data for field in required_fields)

def fix_meta_files():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è meta-—Ñ–∞–π–ª–æ–≤"""
    base_dir = Path("content/articles")
    fixed_count = 0
    skipped_count = 0
    error_count = 0
    
    print("üîç –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ .meta-—Ñ–∞–π–ª–æ–≤...")
    print("=" * 60)
    
    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    for category_dir in base_dir.iterdir():
        if not category_dir.is_dir():
            continue
            
        category = category_dir.name
        print(f"\nüìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}")
        
        # –ò—â–µ–º –≤—Å–µ .meta —Ñ–∞–π–ª—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        for meta_file in category_dir.glob("*.meta"):
            try:
                slug = meta_file.stem  # –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
                
                # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
                with open(meta_file, 'r', encoding='utf-8') as f:
                    content = f.read().strip()
                
                # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
                try:
                    data = json.loads(content)
                    
                    # –ï—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ –≤–∞–ª–∏–¥–Ω—ã–π - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                    if is_valid_meta(data):
                        print(f"  ‚úÖ {slug} - —É–∂–µ –≤–∞–ª–∏–¥–Ω—ã–π, –ø—Ä–æ–ø—É—Å–∫–∞—é")
                        skipped_count += 1
                        continue
                        
                except json.JSONDecodeError:
                    # –ï—Å–ª–∏ JSON –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π - –∑–∞–º–µ–Ω—è–µ–º
                    pass
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                new_data = generate_meta_content(slug, category)
                
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                with open(meta_file, 'w', encoding='utf-8') as f:
                    json.dump(new_data, f, ensure_ascii=False, indent=2)
                
                print(f"  üîß {slug} - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
                fixed_count += 1
                
            except Exception as e:
                print(f"  ‚ùå {meta_file.name} - –æ—à–∏–±–∫–∞: {e}")
                error_count += 1
    
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–ò:")
    print(f"  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {fixed_count}")
    print(f"  ‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ –≤–∞–ª–∏–¥–Ω—ã—Ö): {skipped_count}")
    print(f"  ‚ùå –û—à–∏–±–æ–∫: {error_count}")
    print(f"  üìÅ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {fixed_count + skipped_count + error_count}")
    
    return fixed_count, skipped_count, error_count

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è .meta-—Ñ–∞–π–ª–æ–≤")
    print("üìã –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤ content/articles_backup_*/")
    print()
    
    fixed, skipped, errors = fix_meta_files()
    
    if errors == 0:
        print("\nüéâ –í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")
    else:
        print(f"\n‚ö†Ô∏è  –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏: {errors} —Ñ–∞–π–ª–æ–≤")
    
    print("\nüîç –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ –≤—Ä—É—á–Ω—É—é –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.") 